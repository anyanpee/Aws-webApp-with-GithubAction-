- name: Deploy Dockerized Flask App from ECR
  hosts: proxy
  become: true
  become_method: sudo
  tasks:

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Start and Enable Docker
      service:
        name: docker
        state: started
        enabled: true

    - name: Add ec2-user to Docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Login to Amazon ECR (Private)
      shell: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 257394496890.dkr.ecr.us-west-2.amazonaws.com
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      register: ecr_login_result
      changed_when: false
      ignore_errors: true

    - name: Stop and Remove Existing Container (if running)
      shell: |
        docker stop ECR-Container || true
        docker rm ECR-Container || true
      ignore_errors: true

    - name: Pull Docker Image from Private ECR
      command: docker pull 257394496890.dkr.ecr.us-west-2.amazonaws.com/my-app:latest

    - name: Stop and remove any container using port 80
      shell: |
        CONTAINER_ID=$(docker ps --filter "publish=80" --format "{{.ID}}")
        if [ ! -z "$CONTAINER_ID" ]; then
          docker stop $CONTAINER_ID && docker rm $CONTAINER_ID
        fi
      ignore_errors: true

    - name: Run Docker Container with Latest Image
      command: docker run -d --name ECR-Container -p 80:80 257394496890.dkr.ecr.us-west-2.amazonaws.com/my-app:latest
