name: Deploy with Terraform

on:
  workflow_dispatch:
    inputs:
      TRIGGER:
        description: 'Trigger type'
        required: true
        default: 'apply'

env:
  AWS_REGION: us-west-2
  TRIGGER: ${{ github.event.inputs.TRIGGER }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        if: env.TRIGGER == 'apply'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Environment Variables
        if: env.TRIGGER == 'apply'
        run: |
          echo "ECR_REPOSITORY=my-app" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV

      - name: Build and Push Docker Image to ECR
        if: env.TRIGGER == 'apply'
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Monty_Hall_Game_Flask_App
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Terraform Init
        run: terraform init
        working-directory: ./Terraform

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ./Terraform

      - name: Terraform Apply
        if: env.TRIGGER == 'apply'
        run: terraform apply -auto-approve
        working-directory: ./Terraform
